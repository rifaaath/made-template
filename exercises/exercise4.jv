pipeline TemperaturePipeline {
    TempExtractor ->
        TempZIPInterpreter;
    
    TempZIPInterpreter
        -> TempCSVPicker
        -> TempFileInterpreter
        -> TempCSVInterpreter
        -> TempHeaderWriter
        -> TempTableInterpreter
        -> TempConverter1
        -> TempConverter2
        -> TempLoader;

    
    // block TempExtractor oftype LocalFileExtractor{
    //     filePath: "mow.zip";
    // }
    block TempExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block TempZIPInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block TempCSVPicker oftype FilePicker{
        path: "./data.csv";
    }

    block TempFileInterpreter oftype TextFileInterpreter{}

    block TempCSVInterpreter oftype CSVInterpreter{
        delimiter: ";";
    }

    block TempHeaderWriter oftype CellWriter {
        at: range A1:J1;
        write: ["id", "producer", "model", "month", "temperature", "", "", "", "", "battery_temperature"];
    }

    block TempTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype id,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }

    
    transform CelsiusToFahrenheit {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;

        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block TempConverter1 oftype TableTransformer {
        inputColumns: ['temperature'];
        outputColumn: 'temperature';
        uses: CelsiusToFahrenheit;
    }

    block TempConverter2 oftype TableTransformer {
        inputColumns: ['battery_temperature'];
        outputColumn: 'battery_temperature';
        uses: CelsiusToFahrenheit;
    }

    valuetype id oftype integer{
        constraints: [valid_id];
    }
    constraint valid_id on integer:
        value>0;

    block TempLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "temperatures.sqlite";
    }
}